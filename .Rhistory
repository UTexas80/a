as.Date(index(xts05_profit))
xts05_profit_monthly <- xts::apply.monthly(xts05_profit[,6],sum)
xts05_profit_monthly
xts::tformat(xts05_profit_monthly) <- "%Y-%m"
xts05_profit_monthly
dt05_profit    <- as.data.table(xts05_profit, keep.rownames = TRUE)
dt05_profit
dt05_profit    <- as.data.table(xts05_profit_monthly, keep.rownames = TRUE)
dt05_profit_monthly    <- as.data.table(xts05_profit_monthly, keep.rownames = TRUE)
dt05_profit_monthly
xts05_profit_monthly
barplot(xts05_profit_monthly)
x'ts05_profit_monthly
class(xts05_profit_monthly)
data.table(xts05_profit_monthly)
data.table(xts05_profit_monthly, keep.rownames = TRUE)
dt05_profit_monthly    <- as.data.table(xts05_profit_monthly, keep.rownames = TRUE) # xts to data.table
dt05_profit_monthly
format(dt05_profit_monthly$index, "%Y-%m")
dt05_profit_monthly
dt05_profit_monthly$index<-format(dt05_profit_monthly$index, "%Y-%m")
dt05_profit_monthly
setorder(dt05_profit_monthly,index) %>%
plot_ly(x       = ~index,
y       = ~profit,
marker  = list(color = '#000000'),
name    = 'Graduate',
type    = 'bar') %>%
layout(
title = "Average Award Per Recipient: Graduate Student",
xaxis          = list(
title        = "Academic Year",
tickangle    = -45),
yaxis          = list(
title        = "Awd Amt"),
barmode      = 'group',
tickformat   = '%')
setorder(dt05_profit_monthly,index) %>%
plot_ly(x       = ~index,
y       = ~profit,
marker  = list(color = '#012169'),
name    = 'Graduate',
type    = 'bar') %>%
layout(
title = "ABC Company - 2 Year Monthly Profit",
xaxis          = list(
title        = "Date",
tickangle    = -45),
yaxis          = list(
title        = "Profit"),
barmode      = 'group',
tickformat   = '$,')
p05a1_bar <- setorder(dt05_profit_monthly,index) %>%
plot_ly(x       = ~index,
y       = ~profit,
marker  = list(color = '#012169'),
name    = 'Graduate',
type    = 'bar') %>%
layout(
title = "ABC Company - Monthly Profit",
xaxis          = list(
title        = "Date",
tickangle    = -45),
yaxis          = list(
title        = "Profit"),
barmode      = 'group',
tickformat   = '$,')
p05a1_bar
plotly::plotly_IMAGE(p05a1_bar,
format = "png",
scale = 1,
out_file = here::here("/png", "p05a1_bar.png"))
knitr::include_graphics(here::here('png/p05a1_bar.png'))
ts05_profit_monthly %>%
auto.arima() %>%
forecast(h=3) %>%
autoplot()
dt04_profit_total <- dt02_items_profit[
,
lapply(.SD, sum, na.rm=TRUE), by=item, .SDcols=c("profit", "units") ]
dt04_profit_total[, profit_per_unit    := profit / units]
dt04_profit_total
dt04_central_profit
dt03_central_profit
dt02_central_profit
dt04_profit_total <- dt02_items_profit[
,
lapply(.SD, sum, na.rm=TRUE), by=item, .SDcols=c("profit", "units") ]
dt04_profit_total[, profit_per_unit    := profit / units]
plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Amount",
tickformat = "$,"))
plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit_per_unit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability Per Unit",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Per Unit",
tickformat = "$,"))
p04a1_bar <-  plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Amount",
tickformat = "$,"))
p04a2_bar <-  plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit_per_unit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability Per Unit",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Per Unit",
tickformat = "$,"))
plotly::plotly_IMAGE(p04a1_bar,
format = "png",
scale = 1,
out_file = here::here("/png", "p04a1_bar.png"))
# -----------------------------------------------------------------------------
plotly::plotly_IMAGE(p04a2_pie,
format = "png",
scale = 1,
out_file = here::here("/png", "p04a2_bar.png"))
p04b1_bar <-  plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Amount",
tickformat = "$,"))
# ------------------------------------------------------------------------------
p04b2_bar <-  plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit_per_unit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability Per Unit",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Per Unit",
tickformat = "$,"))
p04b2_bar
plotly::plotly_IMAGE(p04b1_bar,
format = "png",
scale = 1,
out_file = here::here("/png", "p04b1_bar.png"))
plotly::plotly_IMAGE(p04b2_pie,
format = "png",
scale = 1,
out_file = here::here("/png", "p04b2_bar.png"))
library(data.table)
library(dplyr)
library(flextable)
library(kableExtra)
library(officer)
knitr::opts_chunk$set(echo = FALSE)
options(tinytex.verbose = TRUE)
dt04_profit_total <- setDT(data.table(readRDS(here::here("/rds", "dt04_profit_total"))))
saveRDS(dt04_profit_total,     file = here::here("rds/", "xts05_profit.rds"))
library(data.table)
library(dplyr)
library(flextable)
library(kableExtra)
library(officer)
knitr::opts_chunk$set(echo = FALSE)
options(tinytex.verbose = TRUE)
dt04_profit_total <- setDT(data.table(readRDS(here::here("/rds", "dt04_profit_total"))))
saveRDS(dt04_profit_total,     file = here::here("rds/", "dt04_profit_total.rds"))
# -----------------------------------------------------------------------------
saveRDS(xts05_profit,          file = here::here("rds/", "xts05_profit.rds"))
saveRDS(xts05_profit_monthly,  file = here::here("rds/", "xts05_profit_monthly.rds"))
library(data.table)
library(dplyr)
library(flextable)
library(kableExtra)
library(officer)
knitr::opts_chunk$set(echo = FALSE)
options(tinytex.verbose = TRUE)
dt04_profit_total <- setDT(data.table(readRDS(here::here("/rds", "dt04_profit_total"))))
dt04_profit_total <- setDT(data.table(readRDS(here::here("/rds", "dt04_profit_total.rds"))))
library(data.table)
library(dplyr)
library(flextable)
library(kableExtra)
library(officer)
knitr::opts_chunk$set(echo = FALSE)
options(tinytex.verbose = TRUE)
dt04_profit_total <- setDT(data.table(readRDS(here::here("/rds", "dt04_profit_total.rds"))))
knitr::include_graphics(here::here('images/duke.png'))
ft_profit_total <- flextable(dt02_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 2,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
set_caption("")
library(data.table)
library(dplyr)
library(flextable)
library(kableExtra)
library(officer)
knitr::opts_chunk$set(echo = FALSE)
options(tinytex.verbose = TRUE)
dt04_profit_total <- setDT(data.table(readRDS(here::here("/rds", "dt04_profit_total.rds"))))
knitr::include_graphics(here::here('images/duke.png'))
ft_profit_total <- flextable(dt04_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 2,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
set_caption("")
ft_profit_total
knitr::include_graphics(here::here('png/p04b1_bar.png'))
knitr::include_graphics(here::here('png/p04b2_bar.png'))
p04b2_bar <-  plot_ly(dt04_profit_total,
x         = ~item,
y         = ~profit_per_unit,
marker    = list(color = '#012169'),
name      = 'Item Count',
type      = 'bar') %>%
layout( title     = "ABC Company - Item Profitability Per Unit",
xaxis     = list(
title   = "Item Name",
tickangle = -45),
yaxis     = list(
title   = "Profit Per Unit",
tickformat = "$,"))
plotly::plotly_IMAGE(p04b2_bar,
format = "png",
scale = 1,
out_file = here::here("/png", "p04b2_bar.png"))
ft_profit_total <- flextable(dt04_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 2,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
set_caption("")
ft_profit_total
ft_profit_total <- flextable(dt04_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 2,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
set_caption("")
flextable::theme_booktabs(ft_profit_total)
ft_profit_total <- flextable(dt04_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 2,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
set_caption("")
flextable::theme_zebra(ft_profit_total)
ft_profit_total <- flextable(dt04_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 2,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
autofit(
)  %>%
set_caption("")
flextable::theme_zebra(ft_profit_total)
ft_profit_total <- flextable(dt04_profit_total
) %>%
set_header_labels(
item               = "Item Name",
profit             = "Profit",
units              = "Count",
profit_per_unit    = "Profit Per Unit"
) %>%
colformat_num(
j                  = c(2,4),
big.mark           = ",",
digits             = 0,
na_str             = "",
prefix             = "$"
)  %>%
fit_to_width(max_width = 8.50) %>%
autofit(
)  %>%
set_caption("")
flextable::theme_zebra(ft_profit_total)
knitr::include_graphics(here::here('png/p04b2_bar.png'))
knitr::include_graphics(here::here('png/p04b1_bar.png'))
source('~/Documents/GitHub/abc/abc.r')
knitr::opts_chunk$set(echo = TRUE)
source(here::here("/lib", "render_toc.R"))
source('~/Documents/GitHub/abc/abc.r')
knitr::opts_chunk$set(echo = TRUE)
render_toc("01-items.Rmd")
render_toc("02-profit.Rmd")
# automatically create a bib database for R packages
knitr::write_bib(c(
.packages(), 'bookdown', 'knitr', 'rmarkdown'
), 'packages.bib')
source('~/Documents/GitHub/abc/abc.r')
################################################################################
## Step 99.03: Processing                                                    ###
################################################################################
# rmarkdown::run("./dashboard/Flexdashboard.Rmd")
bookdown::render_book("01-intro.Rmd", output_format = "bookdown::pdf_document2")
################################################################################
## Step 99.03: Processing                                                    ###
################################################################################
# rmarkdown::run("./dashboard/Flexdashboard.Rmd")
bookdown::render_book("01-intro.Rmd", output_format = "bookdown::pdf_document2")
unlink('index_cache', recursive = TRUE)
source("~/github/a/abc.r", echo=TRUE)
ProjectTemplate::migrate.project()
addinslist:::addinslistAddin()
getwd()
setwd(getwd())
source("~/github/a/abc.r", echo=TRUE)
addinslist:::addinslistAddin()
devtools::install_github('stla/bracketify')
renv::init(bare = TRUE)
renv::activate()
source("~/github/a/abc.r", echo=TRUE)
if (!require(devtools)) install.packages("devtools")
devtools::install_github("r-lib/devtools")
devtools::install_github('KentonWhite/ProjectTemplate')
source("~/github/a/abc.r", echo=TRUE)
devtools::install_github('stla/bracketify')
devtools::install_github("bergant/datamodelr")
source("~/github/a/abc.r", echo=TRUE)
devtools::install_github("R-CoderDotCom/ggdogs")
source("~/github/a/abc.r", echo=TRUE)
devtools::install_github('Mikata-Project/ggthemr')
source("~/github/a/abc.r", echo=TRUE)
devtools::install_github("gadenbuie/grkstyle")
source("~/github/a/abc.r", echo=TRUE)
remotes::install_github("arcruz0/inexact")
View(config)
source("~/github/a/abc.r", echo=TRUE)
View(config)
remotes::install_github("arcruz0/inexact")
options(repos = c(
yihui = 'https://yihui.r-universe.dev',
CRAN = 'https://cloud.r-project.org'
))
install.packages('knitr')
source("~/github/a/abc.r", echo=TRUE)
devtools::install_github("pzhaonet/bookdownplus")
renv::snapshot()
source("~/github/a/abc.r", echo=TRUE)
install_github('ramnathv/rCharts')
devtools::install_github("jiho/autoplot")
devtools::install_github("b-rodrigues/loud")
# good packages to install for this to work smoothly:
install.packages(c("Rcpp","ggplot2","munsell","htmltools","DBI","assertthat",
"gridExtra","digest","fpc","TSP","registry","gclus","gplots","RColorBrewer",
"stringr","labeling","yaml"))
# You'll need devtools
install.packages.2 <- function (pkg) if (!require(pkg)) install.packages(pkg);
install.packages.2('devtools')
# make sure you have Rtools installed first! if not, then run:
#install.packages('installr'); install.Rtools()
devtools::install_github("ropensci/plotly") # you will probably benefit from the latest version of plotly
devtools::install_github('talgalili/heatmaply')
devtools::install_github('daattali/addinslist')
devtools::install_github("BAAQMD/copydat")
devtools::install_github("ChrisDienes/SeaClass")
devtools::install_github("LudvigOlsen/insertImage")
devtools::install_github("LudvigOlsen/splitChunk")
devtools::install_github("MilesMcBain/datapasta")
devtools::install_github("RhoInc/CRANsearcher")
devtools::install_github("Stan125/GREA")
devtools::install_github("Stan125/limoaddin")
devtools::install_github("ThinkR-open/littleboxes")
devtools::install_github("YvesCR/arimaUI")
devtools::install_github("alan-y/objectremover")
devtools::install_github("benmarwick/snakecaser")
devtools::install_github("benmarwick/wordcountaddin", type = "source", dependencies = TRUE)
devtools::install_github("bnosac/taskscheduleR")
devtools::install_github("calligross/ggthemeassist")
devtools::install_github("crsh/citr")
devtools::install_github("csgillespie/addinmanager")
devtools::install_github("daattali/addinslist")
devtools::install_github("daattali/ggExtra")
devtools::install_github("daranzolin/ViewPipeSteps")
devtools::install_github("daranzolin/compareAreas")
addinslist:::addinslistAddin()
source("~/github/a/volatility.r", echo=TRUE)
renv::history()
renv::status()
renv::upgrade(version = "0.16.0")
install.packages("RCurl")
renv::status()
renv::clean()
renv::status()
source("~/github/a/volatility.r", echo=TRUE)
renv::status()
remotes::install_github("tidyverts/fable")
install.packages("remotes")
remotes::install_github("tidyverts/fable")
if (!requireNamespace("remotes"))
install.packages("remotes")
remotes::install_github("tidyverts/fable")
install.Rtools()
source("~/github/a/volatility.r", echo=TRUE)
if (!require("remotes")) install.packages("remotes")
remotes::install_github('sinhrks/ggfortify')
install.packages("ggplot2")
if (!require("remotes")) install.packages("remotes")
remotes::install_github('sinhrks/ggfortify')
devtools::install_github("gagolews/stringi")
library(devtools)
if (!require(devtools)) install.packages("devtools")
devtools::install_github("r-lib/devtools")
devtools::install_github("gagolews/stringi")
library(devtools)
devtools::install_github("gagolews/stringi")
